%h1 Encrypt using persistent storage
%p  
  :javascript

    function appendReadOutputDiv(data) {
       $("#readOutputDiv").append("<table>");                              
                 $("#readOutputDiv").append("<br><tr><td>ReturnCode:</td><td>" + data[0].returnCode + "</td></tr>");
                 $("#readOutputDiv").append("<tr><td>ReturnMessage:</td><td>" + data[0].returnMessage + "</td></tr>");
                 $("#readOutputDiv").append("<tr><td>StorageKey:</td><td>" + data[0].storageKey + "</td></tr>");              
    }

    
    function errorHandler(e) {
      var msg = '';

      switch (e.code) {
        case FileError.QUOTA_EXCEEDED_ERR:
          msg = 'QUOTA_EXCEEDED_ERR';
        break;
        case FileError.NOT_FOUND_ERR:
          msg = 'NOT_FOUND_ERR';
        break;
        case FileError.SECURITY_ERR:
          msg = 'SECURITY_ERR';
        break;
        case FileError.INVALID_MODIFICATION_ERR:
          msg = 'INVALID_MODIFICATION_ERR';
        break;
        case FileError.INVALID_STATE_ERR:
          msg = 'INVALID_STATE_ERR';
        break;
        default:
          msg = 'Unknown Error';
        break;
      };

      console.log('Error: ' + msg);
    }
    

    
    function toArray(list) {
      return Array.prototype.slice.call(list || [], 0);
    }

    function listResults(entries) {
      // Document fragments can improve performance since they're only appended
      // to the DOM once. Only one browser reflow occurs.
      var fragment = document.createDocumentFragment();

      entries.forEach(function(entry, i) {
        var img = entry.isDirectory ? '<img src="folder-icon.gif">' :
                                      '<img src="file-icon.gif">';
        var li = document.createElement('li');
        li.innerHTML = [img, '<span>', entry.name, '</span>'].join('');
        fragment.appendChild(li);
      });

      document.querySelector('#filelist').appendChild(fragment);
    }

    function onInitFs(fs) {

      var dirReader = fs.root.createReader();
      var entries = [];

      // Call the reader.readEntries() until no more results are returned.
      var readEntries = function() {
         dirReader.readEntries (function(results) {
          if (!results.length) {
            listResults(entries.sort());
          } else {
            entries = entries.concat(toArray(results));
            readEntries();
          }
        }, errorHandler);
      };

      readEntries(); // Start reading dirs.

    }    
    
    
    function appendOutputDiv(data) {
       $("#outputDiv").append("<p>" + data + "</p>");
      // window.webkitStorageInfo.requestQuota(PERSISTENT, 1024*1024, function(grantedBytes) {
        // window.webkitRequestFileSystem(PERSISTENT, grantedBytes, onInitFs, errorHandler);
       //  });
    }
    
    function decryptData() {              
       var value = $("#objectIDs").val();
       var phrase = $("#passPhrase").val();
       var str_array = value.split(',');
       var inputArray = new Array();      
              
       for(var i = 0; i < str_array.length; i++) {
         inputArray.push({"$oid": str_array[i], "passPhrase": phrase});
       }                                  
       
       $.ajax({ 
             type: "POST",
             contenttype: "multipart/form-data",
             data: {data: JSON.stringify(inputArray)},
             url: "http://localhost:4567/stream3/",
             success: function(data) {
                appendOutputDiv(data);
             }});	        
    }

    $(document).ready( function() {
      $('#myForm').ajaxForm(function(data) {

      
      appendReadOutputDiv(JSON.parse(data));

      return false; //do not submit form the normal way
     });  
     
     $('#retrieveButton').click(function() {
        decryptData();
     });  
     
     window.webkitRequestFileSystem(window.PERSISTENT, 1024*1024, onInitFs, errorHandler);
        
    });

  %p Encrypt File
  %form(method="post" id="myForm" enctype='multipart/form-data' action='/file2/')
    %input(type='file' name='myfile')
    %br
    %label{:for => ""} What is your passphrase?
    %input(type='text' name='passPhrase')
    %br
    %input(type='submit' value='Upload!')

  %p Output Encrypt
  %div{:id => "readOutputDiv"}
  
  
  %br
  %br
  %h1 Decrypt
  %p Input Decrypt
  %label{:for => ""} What is your file ID?
  %input{:type => "text", :id => "objectIDs"}
  %br
  %label{:for => ""} What is your passphrase?
  %input{:type => "text", :id => "passPhrase"}
  %button{:id => "retrieveButton"}Retrieve 
  
  %p Output Decrypt
  %div{:id => "outputDiv"}
  %ul{:id=>"filelist"}
